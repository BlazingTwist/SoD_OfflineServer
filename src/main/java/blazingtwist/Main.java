package blazingtwist;

import at.favre.lib.crypto.bcrypt.BCrypt;
import blazingtwist.config.ConfigUtils;
import blazingtwist.config.sql.SQLConfig;
import blazingtwist.config.web.WebConfig;
import blazingtwist.config.web.WebFunctionConfig;
import blazingtwist.crypto.TripleDes;
import blazingtwist.database.MainDBAccessor;
import blazingtwist.wswebservice.WebServiceFunction;
import java.io.IOException;
import java.lang.reflect.InvocationTargetException;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.Base64;
import java.util.HashMap;
import java.util.Random;
import java.util.Set;
import org.reflections.Reflections;

public class Main {
	private static WebHttpHandler webHandler;

	public static WebHttpHandler getWebHandler() {
		return webHandler;
	}

	private static Set<Class<? extends WebServiceFunction>> findWebFunctions() {
		Reflections reflections = new Reflections("blazingtwist.wswebservice.functions");
		return reflections.getSubTypesOf(WebServiceFunction.class);
	}

	public static void main(String[] args) {
		SQLConfig sqlConfig = ConfigUtils.loadConfig(SQLConfig.class, "SQLConfig.conf");
		MainDBAccessor.initialize(sqlConfig);
		Runtime.getRuntime().addShutdownHook(new Thread(Main::onShutdown));

		//MainDBAccessor.addParentUser("test", "test");
		//System.out.println(MainDBAccessor.getParentUserPassword("J+EmTnjYU1aAMJt4MuAk"));

		if (false) {
			String enc = TripleDes.encrypt("<ParentLoginData><UserName>BlazingTwist</UserName><Password>JDJhJDEyJGQuNnN1ZFFHMzd6SnhyWUFBQ01DcS5uY25OejlvajJWc01HbDM0TlZOZ1F1bDV2TGVjTm0y</Password></ParentLoginData>");
			System.out.println(enc);
			return;
		}

		if (false) {
			byte[] salt = new byte[16];
			new Random().nextBytes(salt);
			byte[] hash = BCrypt.with(BCrypt.Version.VERSION_2A).hash(12, salt, "SomeTestPassword".getBytes(StandardCharsets.UTF_16LE));
			String utf8String = new String(hash, StandardCharsets.UTF_8);
			String hashString = Base64.getEncoder().encodeToString(hash);
			System.out.println(utf8String);
			System.out.println(hashString);
			return;
		}

		if (false) {
			String input = "6MkNopLR22oosVhuRTkZJBT/J01NicCpAdxUAY2IEgr4x5XmyaYLgNTacl/KDqrkmFmnuwa61CNmgJdyYsR/ihztYeXxwDX77wBoYUrLURuvP8FDHQMce703Q5PUh0sjd/BKgCpCgMUWsdEjBzqwLyk8TsXvF7hX3ziJ1hPMvo4LdvdAOyTkXGi3JOWk2Of6JExOa0gWt7+W+dchHpeRzUpNwT5j690O/B2FSjZmXy1dv5J9wdWgcM/KV6/FZDOlmvuHext5rob41iE8gDduRaz45W5YVcV09UedwNhMHgV7VJWOCA2PHJd/K4VGEYWlTbrLjvVNbmdXm7gfUfKZnd0K2sjc+vPNuHJWbdp/YB6v0Ufre5CvFNkblDfSBv+M4zu9QPwLv8fjHbWf8XKNSW9tBrgfSDM7YmC4iX14HXd+OQ8sZC1ls0GkFoGHzz6vXy8wTejKERJZvi5R9M1uELHQW0AAJHM6erIo587rJH6LLDKNx7q9jExRYmZm0rptYmC4iX14HXcc4vOkfr4L1yW1neZClK3VmehcUPUHM3OquRzVRkVuuUNuDNHEbtzwP+225VylwBqZjKSlq2hoxbzFpVobKSAu1T2A5ehwpVJ16kBK5jfJ6NdRQ//hoPiR8cSJ7QfZcaqpOcWJqfk7vJfs+CaSEumYc0Ckf2nzfaOouv2rycVtvUHxD9ux2YppnywNknS+0zD6NOdl7mup+EpEC0cS9c4Wl66kY7ZVmnJK7dwTItgM60Axth0sPnUX3qe3peGmTsbuibF54hyIqAgvYJ1PErRUkpAW3IbzuVqOolqKF2gzy4q5bZwZUcdAugUwzZ/3I+w8+xGm89PvyXPj+BOF1JRDNvQNpRVYlvQmXw9KWqH+MrH9W00M5t706tG3XeygsQ0SvzQnB4L7Hz653LsEWRij+5AvojTBkibep7el4aZOxnXqQErmN8noRq5L0PXPv4AV64d8A3eg/vRRUdvYoWO1SkQLRxL1zhaXrqRjtlWackrt3BMi2AzrQDG2HSw+dRfep7el4aZOxrgpKAsdEtdgNGgG5hQn88OCV4vFQ1sebCXv1I3eSw9RcMnP516ccT8R5up4o7LNnrAe3v9psFMKXK/Q04tksVZkadnDLPWLYZsnkrzcUn7MYmC4iX14HXf2oGSVkqqAlXX7S9CvwobrQy2qj/4QHav6NOdl7mup+EpEC0cS9c4Wl66kY7ZVmnJK7dwTItgM60Axth0sPnUX3qe3peGmTsa4KSgLHRLXYDRoBuYUJ/PDgleLxUNbHmxh37FBj0Lr7IrxEE5aTHXmsB7e/2mwUwpcr9DTi2SxVmRp2cMs9YthmyeSvNxSfsxiYLiJfXgdd345DyxkLWWzmBVovVwOL56dJyhsMQ3HUUpEC0cS9c4Wl66kY7ZVmnJK7dwTItgM60Axth0sPnUX3qe3peGmTsY5QRFPmGHsvL03Q5PUh0sjd/BKgCpCgMUWsdEjBzqwL7FtsDqw9Znw";
			//String input = "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";
			//String input = "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";

			String decrypt = TripleDes.decrypt(input);
			System.out.println("got: " + decrypt);
			return;
		}

		WebConfig webConfig = ConfigUtils.loadConfig(WebConfig.class, "WebConfig.conf");
		HashMap<String, WebFunctionConfig> webFunctionsConfig = webConfig.getWebServiceFunctions();
		ArrayList<WebServiceFunction> webFunctions = new ArrayList<>();

		Set<Class<? extends WebServiceFunction>> webFunctionTypes = findWebFunctions();
		for (Class<? extends WebServiceFunction> webFunctionType : webFunctionTypes) {

			String functionName = webFunctionType.getSimpleName();
			if (!webFunctionsConfig.containsKey(functionName)) {
				continue;
			}

			WebFunctionConfig functionConfig = webFunctionsConfig.get(functionName);
			if (!functionConfig.isEnabled()) {
				continue;
			}

			try {
				webFunctions.add(webFunctionType.getDeclaredConstructor(String.class).newInstance(functionConfig.getContextName()));
			} catch (InstantiationException | IllegalAccessException | InvocationTargetException | NoSuchMethodException e) {
				System.err.println("Unable to load WebFunction: " + webFunctionType.getSimpleName());
				e.printStackTrace();
			}
		}

		try {
			webHandler = new WebHttpHandler(webConfig, webFunctions);
		} catch (IOException e) {
			System.err.println("Unable to start Server, exception: " + e);
			System.exit(-1);
		}
	}

	private static void onShutdown() {
		MainDBAccessor.disconnect();
	}
}
